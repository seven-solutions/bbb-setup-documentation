#!/bin/bash

# SERVER_URL=
# SERVER_IPV4=
# SERVER_IPV6=

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

apt update
apt -y upgrade
apt -y install software-properties-common apt-transport-https ca-certificates curl gnupg-agent
add-apt-repository universe
add-apt-repository ppa:ondrej/nginx-mainline  # We need nginx to be compiled with OpenSSL ^1.1.1 to support TLSv1.3
add-apt-repository ppa:ondrej/nginx-qa # TODO autoaccept
apt update
apt -y install certbot
apt -y install nginx openssl apache2-utils

wget -qO- https://ubuntu.bigbluebutton.org/bbb-install.sh | bash -s $SERVER_URL -v xenial-220

### Setup Hostname and SSL

bbb-conf --setip $SERVER_URL

mkdir -p /etc/nginx/ssl
certbot --webroot -w /var/www/bigbluebutton-default/ -d $SERVER_URL certonly # TODO autoaccept
touch /tmp/crontab
crontab -l > /tmp/crontab
echo "30 2 * * 1 /usr/bin/certbot renew >> /var/log/le-renew.log" >> /tmp/crontab
echo "35 2 * * 1 /bin/systemctl reload nginx" >> /tmp/crontab
crontab /tmp/crontab
rm /tmp/crontab

openssl dhparam -out /etc/nginx/ssl/dhp-4096.pem 4096

cp $DIR/bigbluebutton.nginx /etc/nginx/sites-available/bigbluebutton
rm /etc/nginx/sites-enabled/default
cp $DIR/ssl.conf /etc/nginx/ssl/ssl.conf
sed -e "s|%SERVER_URL|$SERVER_URL|g" -i /etc/nginx/sites-available/bigbluebutton
sed -e "s|%SERVER_URL|$SERVER_URL|g" -i /etc/nginx/ssl/ssl.conf


# bigbluebutton.web.serverURL
sed -e 's|^bigbluebutton.web.serverURL=http://|bigbluebutton.web.serverURL=https://|g' -i /usr/share/bbb-web/WEB-INF/classes/bigbluebutton.properties
# jnlpUrl and jnlpFile
sed -e 's|^jnlpUrl=http://|jnlpUrl=https://|g' -i /usr/share/red5/webapps/screenshare/WEB-INF/screenshare.properties
sed -e 's|^jnlpFile=http://|jnlpFile=https://|g' -i /usr/share/red5/webapps/screenshare/WEB-INF/screenshare.properties
sed -e 's|http://|https://|g' -i /var/www/bigbluebutton/client/conf/config.xml
# kurento: wsUrl: wss:// & note: url: https://
sed -e 's|url: http://|url: https://|g' -i /usr/share/meteor/bundle/programs/server/assets/app/config/settings.yml
sed -e 's|ws://|wss://|g' -i /usr/share/meteor/bundle/programs/server/assets/app/config/settings.yml
# playback_protocol: https
sed -e 's|^playback_protocol:[ ]*http|playback_protocol: https|g' -i /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml

### IPv6

# /etc/nginx/conf.d/bigbluebutton_sip_addr_map.conf
cp $DIR/bigbluebutton_sip_addr_map.conf /etc/nginx/conf.d/bigbluebutton_sip_addr_map.conf
sed -e "s|%SERVER_IPV4|$SERVER_IPV4|g" -i /etc/nginx/conf.d/bigbluebutton_sip_addr_map.conf
sed -e "s|%SERVER_IPV6|$SERVER_IPV6|g" -i /etc/nginx/conf.d/bigbluebutton_sip_addr_map.conf

# /etc/bigbluebutton/nginx/sip.nginx
cp $DIR/sip.nginx /etc/bigbluebutton/nginx/sip.nginx
# /opt/freeswitch/conf/sip_profiles/external_ipv6.xml
cp $DIR/external_ipv6.xml /opt/freeswitch/conf/sip_profiles/external_ipv6.xml

### Docker & Greenlight

# Docker install
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - # Fingerprint 9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88
add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
apt update
apt -y install docker-ce docker-ce-cli containerd.io

# Greenlight

mkdir ~/greenlight && cd ~/greenlight
cp $DIR/.env .env

echo -e "# Secrects generated by the install script
BIGBLUEBUTTON_ENDPOINT=$(bbb-conf --secret | grep -oP 'URL: \Khttp(s)?://.*$')
BIGBLUEBUTTON_SECRET=$(bbb-conf --secret | grep -oP 'Secret: \K.*$')
SECRET_KEY_BASE=$(docker run --rm bigbluebutton/greenlight:v2 bundle exec rake secret)" >> .env
docker run --rm --env-file .env bigbluebutton/greenlight:v2 bundle exec rake conf:check
docker run --rm bigbluebutton/greenlight:v2 cat ./greenlight.nginx | sudo tee /etc/bigbluebutton/nginx/greenlight.nginx
docker run --rm bigbluebutton/greenlight:v2 cat ./docker-compose.yml > docker-compose.yml
pass=$(openssl rand -hex 8);
sed -i -e 's/POSTGRES_PASSWORD=password/POSTGRES_PASSWORD='$pass'/g' docker-compose.yml
sed -i -e 's/DB_PASSWORD=password/DB_PASSWORD='$pass'/g' .env
# TODO email

curl -L "https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

docker-compose up -d
bbb-conf --restart
docker exec greenlight-v2 bundle exec rake admin:create

### More privacy in recordings

sed -e 's|^history=[0-9]\?$|history=0|g' -i /etc/cron.daily/bigbluebutton
sed -e 's|^unrecorded_days=[0-9]\?$|unrecorded_days=0|g' -i /etc/cron.daily/bigbluebutton

### Firewall

apt -y install ufw
ufw default deny
ufw logging on
ufw allow http
ufw allow https
ufw allow ssh
ufw allow 16384:32768/udp
ufw status
ufw enable

### TURN & STUN

TURN_SERVER=
TURN_SERVER_SECRET=

cp $DIR/stun-turn-servers.xml /usr/share/bbb-web/WEB-INF/classes/spring/turn-stun-servers.xml
sed -e "s|%TURN_SERVER_SECRET|$TURN_SERVER_SECRET|g" -i /usr/share/bbb-web/WEB-INF/classes/spring/turn-stun-servers.xml
sed -e "s|%TURN_SERVER|$TURN_SERVER|g" -i /usr/share/bbb-web/WEB-INF/classes/spring/turn-stun-servers.xml

### Optional support for prometheus monitoring

wget https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz -O /tmp/node_exporter-0.18.1.linux-amd64.tar.gz
tar xvfz /tmp/node_exporter-0.18.1.linux-amd64.tar.gz -C /tmp/
mv /tmp/node_exporter-0.18.1.linux-amd64/node_exporter /usr/local/bin/node_exporter
rm -rf /tmp/node_exporter-0.18.1.linux-amd64
rm -f /tmp/node_exporter-0.18.1.linux-amd64.tar.gz
# /etc/bigbluebutton/nginx/metrics.nginx
cp $DIR/metrics.nginx /etc/bigbluebutton/nginx/metrics.nginx
htpasswd -c /etc/bigbluebutton/nginx/.htpasswd metrics
cp $DIR/node_exporter.service /etc/systemd/system/node_exporter.service
systemctl enable node_exporter
systemctl start node_exporter

mkdir -p /root/bbb-exporter
cd /root/bbb-exporter
cp $DIR/bbb-exporter-docker.yml /root/bbb-exporter/docker-compose.yml
touch /root/bbb-exporter/secrets.env
echo -e "# Secrects generated by the install script
API_BASE_URL=$(bbb-conf --secret | grep -oP 'URL: \Khttp(s)?://.*$')api/
API_SECRET=$(bbb-conf --secret | grep -oP 'Secret: \K.*$')
" > /root/bbb-exporter/secrets.env
docker-compose up -d
